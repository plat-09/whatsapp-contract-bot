const { default: makeWASocket, useMultiFileAuthState, DisconnectReason } = require('@whiskeysockets/baileys')
const { Boom } = require('@hapi/boom')
const axios = require('axios')

async function startWhatsAppBot() {
  const { state, saveCreds } = await useMultiFileAuthState('auth_info')

  const sock = makeWASocket({
    auth: state,
    printQRInTerminal: true
  })

  sock.ev.on('creds.update', saveCreds)

  sock.ev.on('connection.update', ({ connection, lastDisconnect }) => {
    if (connection === 'close') {
      const shouldReconnect = lastDisconnect.error?.output?.statusCode !== DisconnectReason.loggedOut
      console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ. –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:', shouldReconnect)
      if (shouldReconnect) {
        startWhatsAppBot()
      }
    } else if (connection === 'open') {
      console.log('‚úÖ WhatsApp-–±–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω')
    }
  })

  sock.ev.on('messages.upsert', async ({ messages, type }) => {
    if (type !== 'notify') return

    const msg = messages[0]
    if (!msg.message || msg.key.fromMe) return

    const sender = msg.key.remoteJid
    const text = msg.message?.conversation || msg.message?.extendedTextMessage?.text || ''

    console.log(`üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${sender}: ${text}`)

    // –ü—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É —É Telegram-—Å–µ—Ä–≤–µ—Ä–∞
    try {
      const response = await axios.post('http://localhost:5005/get-contract', {
        number: text.trim()
      })

      const { text: replyText, file } = response.data

      // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–∫—Å—Ç
      await sock.sendMessage(sender, { text: replyText })

      // –ü–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∏–º PDF-—Ñ–∞–π–ª
      await sock.sendMessage(sender, {
        document: { url: file },
        mimetype: 'application/pdf',
        fileName: '–î–æ–≥–æ–≤–æ—Ä.pdf'
      })

    } catch (error) {
      const errMsg = error.response?.data?.text || "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞"
      await sock.sendMessage(sender, { text: errMsg })
    }
  })
}

startWhatsAppBot()